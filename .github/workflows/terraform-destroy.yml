name: 'Terraform Destroy'

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  AWS_DEFAULT_REGION: 'us-east-1'
  CLUSTER_NAME: 'hackaton-fiap'

  DB_CLUSTER_NAME: ${{ vars.DB_CLUSTER_NAME }}
  DB_NAME: ${{ vars.DB_NAME }}
  DB_USERNAME: ${{ vars.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ vars.DB_PORT }}

jobs:
  destroy-app:
    name: "App Destroy"
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Setup Kubectl CLI
      run:  |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client

    - name: Setup Kubeconfig
      run:  |
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $CLUSTER_NAME

    - name: Delete kubernetes cluster deployment
      run:  |
            kubectl delete -f ./kubernetes
      continue-on-error: true

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: destroy-app

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Replace terraform variable values
      run:  |
        sed -i 's@DB_CLUSTER_NAME_HERE@${{ env.DB_CLUSTER_NAME }}@g' variables.tf
        sed -i 's@DB_NAME_HERE@${{ env.DB_NAME }}@g' variables.tf
        sed -i 's@DB_USERNAME_HERE@${{ env.DB_USERNAME }}@g' variables.tf
        sed -i 's@DB_PASSWORD_HERE@${{ env.DB_PASSWORD }}@g' variables.tf
        sed -i 's@DB_PORT_HERE@${{ env.DB_PORT }}@g' variables.tf
        cat variables.tf

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -destroy -input=false

    - name: Terraform Destroy
      run: terraform destroy -auto-approve -input=false

    - name: Remove repository website URL
      run: |
        WEBSITE_URL=""
        REPO_OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
        REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)

        curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GH_API_TOKEN }}" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME" \
            -d "{\"name\": \"$REPO_NAME\", \"homepage\": \"$WEBSITE_URL\"}"
      env:
        EXTERNAL_HOSTNAME: ${{ env.EXTERNAL_HOSTNAME }}
